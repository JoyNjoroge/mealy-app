"""Update models.py

Revision ID: 9a2c4cae50c2
Revises: 5c49898b7ea5
Create Date: 2025-07-16 22:47:17.211587
"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9a2c4cae50c2'
down_revision = '5c49898b7ea5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('meals', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_meals_caterer_id'), ['caterer_id'], unique=False)

    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_menu_items_meal_id'), ['meal_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_menu_items_menu_id'), ['menu_id'], unique=False)

    with op.batch_alter_table('menus', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_menus_caterer_id'), ['caterer_id'], unique=False)

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notifications_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.create_index(batch_op.f('ix_orders_menu_item_id'), ['menu_item_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=70),
               nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=255),
               nullable=False)
        # Fix ENUM casting issue in PostgreSQL
        batch_op.execute("ALTER TABLE users ALTER COLUMN role TYPE user_roles USING role::user_roles")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.Enum('customer', 'caterer', 'admin', name='user_roles'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=80),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=70),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_orders_user_id'))
        batch_op.drop_index(batch_op.f('ix_orders_menu_item_id'))
        batch_op.drop_column('status')

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notifications_user_id'))

    with op.batch_alter_table('menus', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_menus_caterer_id'))

    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_menu_items_menu_id'))
        batch_op.drop_index(batch_op.f('ix_menu_items_meal_id'))

    with op.batch_alter_table('meals', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_meals_caterer_id'))

    # ### end Alembic commands ###
