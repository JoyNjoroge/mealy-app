"""empty message

Revision ID: 24e8b7ab6442
Revises: 9a2c4cae50c2
Create Date: 2025-07-18 14:04:40.176308

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '24e8b7ab6442'
down_revision = '9a2c4cae50c2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('meals', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_meals_caterer_id'))

    op.drop_table('meals')
    with op.batch_alter_table('menus', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_menus_caterer_id'))

    op.drop_table('menus')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notifications_user_id'))

    op.drop_table('notifications')
    op.drop_table('users')
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_orders_menu_item_id'))
        batch_op.drop_index(batch_op.f('ix_orders_user_id'))

    op.drop_table('orders')
    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_menu_items_meal_id'))
        batch_op.drop_index(batch_op.f('ix_menu_items_menu_id'))

    op.drop_table('menu_items')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('menu_items',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('menu_items_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('menu_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('meal_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['meal_id'], ['meals.id'], name='menu_items_meal_id_fkey'),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.id'], name='menu_items_menu_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='menu_items_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_menu_items_menu_id'), ['menu_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_menu_items_meal_id'), ['meal_id'], unique=False)

    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('menu_item_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['menu_item_id'], ['menu_items.id'], name=op.f('orders_menu_item_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('orders_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('orders_pkey'))
    )
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_orders_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_orders_menu_item_id'), ['menu_item_id'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=70), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('customer', 'caterer', 'admin', name='user_roles'), autoincrement=False, nullable=False),
    sa.Column('public_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('public_id', name='users_public_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('notifications_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('notifications_pkey'))
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notifications_user_id'), ['user_id'], unique=False)

    op.create_table('menus',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('caterer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['caterer_id'], ['users.id'], name=op.f('menus_caterer_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('menus_pkey')),
    sa.UniqueConstraint('date', name=op.f('menus_date_key'))
    )
    with op.batch_alter_table('menus', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_menus_caterer_id'), ['caterer_id'], unique=False)

    op.create_table('meals',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('caterer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['caterer_id'], ['users.id'], name=op.f('meals_caterer_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('meals_pkey'))
    )
    with op.batch_alter_table('meals', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_meals_caterer_id'), ['caterer_id'], unique=False)

    # ### end Alembic commands ###
